
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVrightUMINUSleftPOWSQRTleftLPARENRPARENFACTDIV FACT LPAREN MINUS MULT NUMBER PLUS POW RPAREN SQRTexpression : MINUS expression %prec UMINUSexpression : expression MINUS termexpression : expression PLUS termexpression : termfactor : LPAREN expression RPARENfactor : NUMBERfactor : factor POW factorfactor : factor SQRT factorterm : term DIV factorfactor : term FACT\n                  | NUMBER FACTterm : factorterm : term MULT factor'
    
_lr_action_items = {'MINUS':([0,1,2,3,4,5,6,9,12,15,16,17,18,20,21,22,23,24,],[2,7,2,-4,-12,2,-6,-1,-10,7,-11,-2,-3,-9,-13,-7,-8,-5,]),'LPAREN':([0,2,5,7,8,10,11,13,14,],[5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,2,5,7,8,10,11,13,14,],[6,6,6,6,6,6,6,6,6,]),'$end':([1,3,4,6,9,12,16,17,18,20,21,22,23,24,],[0,-4,-12,-6,-1,-10,-11,-2,-3,-9,-13,-7,-8,-5,]),'PLUS':([1,3,4,6,9,12,15,16,17,18,20,21,22,23,24,],[8,-4,-12,-6,-1,-10,8,-11,-2,-3,-9,-13,-7,-8,-5,]),'RPAREN':([3,4,6,9,12,15,16,17,18,20,21,22,23,24,],[-4,-12,-6,-1,-10,24,-11,-2,-3,-9,-13,-7,-8,-5,]),'DIV':([3,4,6,12,16,17,18,19,20,21,22,23,24,],[10,-12,-6,-10,-11,10,10,10,-9,-13,-7,-8,-5,]),'MULT':([3,4,6,12,16,17,18,19,20,21,22,23,24,],[11,-12,-6,-10,-11,11,11,11,-9,-13,-7,-8,-5,]),'FACT':([3,4,6,12,16,17,18,19,20,21,22,23,24,],[12,-12,16,-10,-11,12,12,12,-9,-13,-7,-8,-5,]),'POW':([4,6,12,16,20,21,22,23,24,],[13,-6,-10,-11,13,13,-7,-8,-5,]),'SQRT':([4,6,12,16,20,21,22,23,24,],[14,-6,-10,-11,14,14,-7,-8,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,],[1,9,15,]),'term':([0,2,5,7,8,10,11,13,14,],[3,3,3,17,18,19,19,19,19,]),'factor':([0,2,5,7,8,10,11,13,14,],[4,4,4,4,4,20,21,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','parser.py',18),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',18),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',18),
  ('expression -> term','expression',1,'p_expression_term','parser.py',18),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',18),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',18),
  ('factor -> factor POW factor','factor',3,'p_factor_pow','parser.py',18),
  ('factor -> factor SQRT factor','factor',3,'p_factor_sqrt','parser.py',18),
  ('term -> term DIV factor','term',3,'p_term_div','parser.py',18),
  ('factor -> term FACT','factor',2,'p_term_fact','parser.py',18),
  ('factor -> NUMBER FACT','factor',2,'p_term_fact','parser.py',19),
  ('term -> factor','term',1,'p_term_factor','parser.py',18),
  ('term -> term MULT factor','term',3,'p_term_mult','parser.py',18),
]